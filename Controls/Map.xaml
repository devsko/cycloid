<UserControl
    x:Class="cycloid.Controls.Map"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:cycloid.Controls"
    xmlns:cycloid="using:cycloid"
    xmlns:maps="using:Windows.UI.Xaml.Controls.Maps">

    <UserControl.Resources>
        <controls:MapCommandBarFlyout x:Name="MapNoTrackMenu" />
        <controls:MapCommandBarFlyout x:Name="MapEditMenu">
            <AppBarButton
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddDestinationCommand}"
                CommandParameter="{x:Bind Mode=OneWay, Path=MapEditMenu.Location}"
                Label="Add new destination" />
            <AppBarButton
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddWayPointCommand}"
                CommandParameter="{x:Bind Mode=OneWay, Path=MapEditMenu.Location}"
                Label="Add waypoint" />
            <AppBarButton
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddStartCommand}"
                CommandParameter="{x:Bind Mode=OneWay, Path=MapEditMenu.Location}"
                Label="Add new start" />
            <AppBarSeparator />
            <AppBarButton Label="Add forbidden area" />
        </controls:MapCommandBarFlyout>
        <controls:MapCommandBarFlyout x:Name="MapEditPointMenu">
            <AppBarButton Command="{x:Bind Mode=OneTime, Path=ViewModel.StartDragWayPointCommand}" Label="Move waypoint" />
            <AppBarButton Command="{x:Bind Mode=OneTime, Path=ViewModel.DeleteWayPointCommand}" Label="Delete waypoint" />
            <AppBarSeparator />
            <AppBarButton
                x:Name="SplitGpxHere"
                Command="{x:Bind Mode=OneTime, Path=ViewModel.TogglePointIsFileSplitCommand}"
                Label="Split GPX here"
                Visibility="{x:Bind Mode=OneWay, Path=VisibleIfNotIsFileSplit(ViewModel.HoveredWayPoint)}" />
            <AppBarButton
                Command="{x:Bind Mode=OneTime, Path=ViewModel.TogglePointIsFileSplitCommand}"
                Label="Don't split GPX here"
                Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfNotVisible(SplitGpxHere.Visibility)}" />
        </controls:MapCommandBarFlyout>
        <controls:MapCommandBarFlyout x:Name="MapEditSectionMenu">
            <AppBarButton
                Command="{x:Bind Mode=OneTime, Path=ViewModel.StartDragNewWayPointCommand}"
                CommandParameter="{x:Bind Mode=OneWay, Path=MapEditMenu.Location}"
                Label="Add new waypoint" />
            <AppBarSeparator />
            <AppBarButton
                x:Name="DirectRoute"
                Command="{x:Bind Mode=OneTime, Path=ViewModel.ToggleSectionIsDirectRouteCommand}"
                Label="Direct route"
                Visibility="{x:Bind Mode=OneWay, Path=VisibleIfNotIsDirectRoute(ViewModel.HoveredSection)}" />
            <AppBarButton
                Command="{x:Bind Mode=OneTime, Path=ViewModel.ToggleSectionIsDirectRouteCommand}"
                Label="Follow routing"
                Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfNotVisible(DirectRoute.Visibility)}" />
        </controls:MapCommandBarFlyout>
    </UserControl.Resources>

    <maps:MapControl
        x:Name="MapControl"
        Loaded="MapControl_Loaded"
        MapContextRequested="MapControl_MapContextRequested"
        MapServiceToken="{cycloid:ConfigurationValue Key=Bing:ServiceApiKey}"
        MapTapped="MapControl_MapTapped"
        PreviewKeyDown="MapControl_PreviewKeyDown"
        StyleSheet="{x:Bind Mode=OneWay, Path=ViewModel.MapStyleAndColor.StyleSheet}">

        <maps:MapControl.Resources>
            <maps:MapTileSource
                x:Name="Heatmap"
                IsFadingEnabled="False"
                Visible="{x:Bind Mode=OneWay, Path=ViewModel.HeatmapVisible}">
                <maps:MapTileSource.DataSource>
                    <maps:HttpMapTileDataSource UriFormatString="{x:Bind Mode=OneTime, Path=ViewModel.Strava.HeatmapTilesUri}" />
                </maps:MapTileSource.DataSource>
            </maps:MapTileSource>
            <maps:MapTileSource
                x:Name="Osm"
                IsFadingEnabled="false"
                Layer="BackgroundReplacement"
                Visible="{x:Bind Mode=OneWay, Path=ViewModel.MapStyleAndColor.Osm}">
                <maps:MapTileSource.DataSource>
                    <maps:HttpMapTileDataSource UriFormatString="{x:Bind Mode=OneTime, Path=ViewModel.Osm.TilesUri}" />
                </maps:MapTileSource.DataSource>
            </maps:MapTileSource>
            <maps:MapElementsLayer
                x:Name="RoutingLayer"
                MapElementClick="RoutingLayer_MapElementClick"
                MapElementPointerEntered="RoutingLayer_MapElementPointerEntered"
                MapElementPointerExited="RoutingLayer_MapElementPointerExited" />
        </maps:MapControl.Resources>

        <controls:PointerPanel
            x:Name="PointerPanel"
            PointerMoved="PointerPanel_PointerMoved"
            Tapped="PointerPanel_Tapped" />

        <!--  CurrentPoint  -->
        <Border
            maps:MapControl.Location="{x:Bind Mode=OneWay, Path=cycloid:Convert.ToGeopoint(ViewModel.CurrentPoint)}"
            maps:MapControl.NormalizedAnchorPoint=".5 .5"
            UseLayoutRounding="false"
            Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfValid(ViewModel.CurrentPoint)}">
            <Grid>
                <Ellipse
                    Width="15"
                    Height="15"
                    Fill="Black" />
                <Ellipse
                    Width="12"
                    Height="12"
                    Fill="White" />
                <Ellipse
                    Width="8"
                    Height="8"
                    Fill="{x:Bind Mode=OneWay, Path=cycloid:Convert.GradientToBrush(ViewModel.CurrentPoint.Gradient)}" />
            </Grid>
        </Border>

        <!--  HoverPoint  -->
        <Border
            maps:MapControl.Location="{x:Bind Mode=OneWay, Path=cycloid:Convert.ToGeopoint(ViewModel.HoverPoint)}"
            maps:MapControl.NormalizedAnchorPoint=".5 .5"
            UseLayoutRounding="false"
            Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfValid(ViewModel.HoverPoint)}">
            <Grid>
                <Ellipse
                    Width="10"
                    Height="10"
                    Fill="Black" />
                <Ellipse
                    Width="7"
                    Height="7"
                    Fill="White" />
            </Grid>
        </Border>

        <!--  HoverPointValues  -->
        <controls:MapHoverPointValues
            Enabled="{x:Bind Mode=OneWay, Path=ViewModel.MapHoverPointValuesEnabled}"
            Point="{x:Bind Mode=OneWay, Path=ViewModel.HoverPoint}"
            Track="{x:Bind Mode=OneWay, Path=ViewModel.Track}" />

    </maps:MapControl>

</UserControl>
