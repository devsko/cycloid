<controls:ViewModelControl
    x:Class="cycloid.Controls.Map"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:cycloid.Controls"
    xmlns:cycloid="using:cycloid"
    xmlns:info="using:cycloid.Info"
    xmlns:maps="using:Windows.UI.Xaml.Controls.Maps"
    Loaded="ViewModelControl_Loaded">

    <controls:ViewModelControl.Resources>

        <Style
            x:Key="LocationMenuItemStyle"
            BasedOn="{StaticResource DefaultMenuFlyoutItemStyle}"
            TargetType="MenuFlyoutItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuFlyoutItem">
                        <Grid
                            x:Name="LayoutRoot"
                            Margin="{StaticResource MenuFlyoutItemMargin}"
                            Padding="{StaticResource MenuFlyoutItemThemePaddingNarrow}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="TextBlock"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Text}"
                                TextTrimming="{ThemeResource MenuFlyoutItemTextTrimming}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <controls:MapMenuFlyout x:Name="MapNoTrackMenu" />
        <controls:MapMenuFlyout x:Name="MapEditMenu">
            <MenuFlyoutItem
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddWayPointCommand}"
                CommandParameter="{x:Bind Mode=OneWay, Path=MapEditMenu.Location}"
                Text="Add waypoint" />
            <MenuFlyoutItem
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddDestinationCommand}"
                CommandParameter="{x:Bind Mode=OneWay, Path=MapEditMenu.Location}"
                Text="Add new destination" />
            <MenuFlyoutItem
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddStartCommand}"
                CommandParameter="{x:Bind Mode=OneWay, Path=MapEditMenu.Location}"
                Text="Add new start" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem IsEnabled="False" Text="Add forbidden area" />
        </controls:MapMenuFlyout>
        <controls:MapMenuFlyout x:Name="MapEditPointMenu">
            <MenuFlyoutItem Command="{x:Bind Mode=OneTime, Path=ViewModel.DeleteWayPointCommand}" Text="Delete waypoint" />
            <MenuFlyoutItem Command="{x:Bind Mode=OneTime, Path=ViewModel.StartDragWayPointCommand}" Text="Move waypoint" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Name="SplitGpxHere"
                Command="{x:Bind Mode=OneTime, Path=ViewModel.TogglePointIsFileSplitCommand}"
                Text="Split GPX here"
                Visibility="{x:Bind Mode=OneWay, Path=VisibleIfNotIsFileSplit(ViewModel.HoveredWayPoint)}" />
            <MenuFlyoutItem
                Command="{x:Bind Mode=OneTime, Path=ViewModel.TogglePointIsFileSplitCommand}"
                Text="Don't split GPX here"
                Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfNotVisible(SplitGpxHere.Visibility)}" />
        </controls:MapMenuFlyout>
        <controls:MapMenuFlyout x:Name="MapEditSectionMenu">
            <MenuFlyoutItem
                Command="{x:Bind Mode=OneTime, Path=ViewModel.StartDragNewWayPointCommand}"
                CommandParameter="{x:Bind Mode=OneWay, Path=MapEditMenu.Location}"
                Text="Add waypoint" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                x:Name="DirectRoute"
                Command="{x:Bind Mode=OneTime, Path=ViewModel.ToggleSectionIsDirectRouteCommand}"
                Text="Direct route"
                Visibility="{x:Bind Mode=OneWay, Path=VisibleIfNotIsDirectRoute(ViewModel.HoveredSection)}" />
            <MenuFlyoutItem
                Command="{x:Bind Mode=OneTime, Path=ViewModel.ToggleSectionIsDirectRouteCommand}"
                Text="Follow routing"
                Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfNotVisible(DirectRoute.Visibility)}" />
        </controls:MapMenuFlyout>
        <controls:MapMenuFlyout x:Name="MapOnTrackMenu">
            <MenuFlyoutItem
                x:Name="ConvertInfoMenuItem"
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddPointOfInterestCommand}"
                Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfValid(ViewModel.HoverInfo)}" />
            <MenuFlyoutItem
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddPointOfInterestCommand}"
                Text="Add split point"
                Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfNotVisible(ConvertInfoMenuItem.Visibility)}">
                <MenuFlyoutItem.CommandParameter>
                    <cycloid:PointOfInterestCommandParameter Location="{x:Bind Mode=OneWay, Path=MapOnTrackMenu.Location}" Type="{x:Bind Mode=OneTime, Path=info:InfoType.Split}" />
                </MenuFlyoutItem.CommandParameter>
            </MenuFlyoutItem>
            <MenuFlyoutItem
                Command="{x:Bind Mode=OneTime, Path=ViewModel.AddPointOfInterestCommand}"
                Text="Add mountain pass"
                Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfNotVisible(ConvertInfoMenuItem.Visibility)}">
                <MenuFlyoutItem.CommandParameter>
                    <cycloid:PointOfInterestCommandParameter Location="{x:Bind Mode=OneWay, Path=MapOnTrackMenu.Location}" Type="{x:Bind Mode=OneTime, Path=info:InfoType.MountainPass}" />
                </MenuFlyoutItem.CommandParameter>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfNotVisible(ConvertInfoMenuItem.Visibility)}" />
        </controls:MapMenuFlyout>
        <controls:MapMenuFlyout x:Name="MapTrainMenu" />
    </controls:ViewModelControl.Resources>

    <maps:MapControl
        x:Name="MapControl"
        ActualCameraChanged="MapControl_ActualCameraChanged"
        Loaded="MapControl_Loaded"
        LosingFocus="MapControl_LosingFocus"
        MapContextRequested="MapControl_MapContextRequested"
        MapServiceToken="{cycloid:ConfigurationValue Key=Bing:ServiceApiKey}"
        MapTapped="MapControl_MapTapped"
        PreviewKeyDown="MapControl_PreviewKeyDown"
        StyleSheet="{x:Bind Mode=OneWay, Path=ViewModel.MapStyleAndColor.StyleSheet}"
        ZoomLevel="{x:Bind Mode=TwoWay, Path=ViewModel.MapZoomLevel}">

        <maps:MapControl.Resources>
            <maps:MapTileSource
                x:Name="Heatmap"
                IsFadingEnabled="False"
                Visible="{x:Bind Mode=OneWay, Path=ViewModel.HeatmapVisible}">
                <maps:MapTileSource.DataSource>
                    <maps:HttpMapTileDataSource UriFormatString="{x:Bind Mode=OneTime, Path=ViewModel.Strava.HeatmapTilesUri}" />
                </maps:MapTileSource.DataSource>
            </maps:MapTileSource>
            <maps:MapTileSource
                x:Name="Osm"
                IsFadingEnabled="false"
                Layer="BackgroundReplacement"
                Visible="{x:Bind Mode=OneWay, Path=ViewModel.MapStyleAndColor.Osm}">
                <maps:MapTileSource.DataSource>
                    <maps:HttpMapTileDataSource UriFormatString="{x:Bind Mode=OneTime, Path=ViewModel.Osm.TilesUri}" />
                </maps:MapTileSource.DataSource>
            </maps:MapTileSource>
            <maps:MapElementsLayer
                x:Name="RoutingLayer"
                MapElementClick="RoutingLayer_MapElementClick"
                MapElementPointerEntered="RoutingLayer_MapElementPointerEntered"
                MapElementPointerExited="RoutingLayer_MapElementPointerExited"
                Visible="{x:Bind Mode=OneWay, Path=ViewModel.TrackVisible}" />
            <maps:MapElementsLayer x:Name="DifferenceLayer" Visible="{x:Bind Mode=OneWay, Path=ViewModel.TrackVisible}" />
            <maps:MapElementsLayer x:Name="PoisLayer" Visible="{x:Bind Mode=OneWay, Path=ViewModel.PoisVisible}" />
            <maps:MapElementsLayer x:Name="InfoLayer" Visible="{x:Bind Mode=OneWay, Path=ViewModel.InfoVisible}" />
        </maps:MapControl.Resources>

        <controls:PointerPanel
            x:Name="PointerPanel"
            ContextRequested="PointerPanel_ContextRequested"
            PointerMoved="PointerPanel_PointerMoved"
            Tapped="PointerPanel_Tapped" />

        <!--  CurrentPoint  -->
        <Border
            maps:MapControl.Location="{x:Bind Mode=OneWay, Path=cycloid:Convert.ToGeopoint(ViewModel.CurrentPoint)}"
            maps:MapControl.NormalizedAnchorPoint=".5 .5"
            UseLayoutRounding="false"
            Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfValid(ViewModel.CurrentPoint)}">
            <Grid>
                <Ellipse
                    Width="15"
                    Height="15"
                    Fill="Black" />
                <Ellipse
                    Width="12"
                    Height="12"
                    Fill="White" />
                <Ellipse
                    Width="8"
                    Height="8"
                    Fill="{x:Bind Mode=OneWay, Path=cycloid:Convert.GradientToBrush(ViewModel.CurrentPoint.Gradient)}" />
            </Grid>
        </Border>

        <!--  HoverPoint  -->
        <Border
            ContextRequested="PointerPanel_ContextRequested"
            maps:MapControl.Location="{x:Bind Mode=OneWay, Path=cycloid:Convert.ToGeopoint(ViewModel.HoverPoint)}"
            maps:MapControl.NormalizedAnchorPoint=".5 .5"
            UseLayoutRounding="False"
            Visibility="{x:Bind Mode=OneWay, Path=cycloid:Convert.VisibleIfValid(ViewModel.HoverPoint)}">
            <Grid>
                <Ellipse
                    Width="15"
                    Height="15"
                    Stroke="DarkBlue"
                    StrokeThickness="4" />
                <Ellipse
                    Width="11"
                    Height="11"
                    Stroke="White"
                    StrokeThickness="2" />
            </Grid>
        </Border>

        <!--  HoverPointValues  -->
        <controls:MapHoverPointValues
            maps:MapControl.Location="{x:Bind Mode=OneWay, Path=cycloid:Convert.ToGeopoint(ViewModel.HoverPoint)}"
            maps:MapControl.NormalizedAnchorPoint="0 1"
            Enabled="{x:Bind Mode=TwoWay, Path=ViewModel.MapHoverPointValuesEnabled}"
            Point="{x:Bind Mode=OneWay, Path=ViewModel.HoverPoint}"
            Track="{x:Bind Mode=OneWay, Path=ViewModel.Track}" />

    </maps:MapControl>

</controls:ViewModelControl>
