<ItemsControl
    x:Class="cycloid.Controls.TrackSplitter"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cycloid="using:cycloid"
    xmlns:local="using:cycloid.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Loaded="ItemsControl_Loaded"
    PointerEntered="ItemsControl_PointerEntered"
    PointerExited="ItemsControl_PointerExited"
    Tapped="ItemsControl_Tapped">
    <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
            <Canvas Background="#00000000" />
        </ItemsPanelTemplate>
    </ItemsControl.ItemsPanel>
    <ItemsControl.ItemTemplate>
        <DataTemplate x:DataType="cycloid:TrackSplit">
            <Canvas>
                <Canvas.Resources>
                    <SolidColorBrush x:Key="NormalBrush" Color="CadetBlue" />
                    <SolidColorBrush x:Key="PointerOverBrush" Color="CadetBlue" />
                    <StaticResource x:Key="CapturedBrush" ResourceKey="SystemAccentColorLight1" />
                </Canvas.Resources>

                <Path
                    x:Name="Triangle"
                    Data="M 0,12 L 6,1 L12,12 Z"
                    Fill="{StaticResource NormalBrush}"
                    Stroke="Black"
                    StrokeThickness="1"
                    Visibility="{x:Bind Mode=OneTime, Path=cycloid:Convert.VisibleIfNot(CanNotMove)}">
                    <Path.RenderTransform>
                        <ScaleTransform CenterX="6" CenterY="12" />
                    </Path.RenderTransform>
                </Path>
                <local:MapControlBorder
                    Canvas.Left="{Binding Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}, Path=GapTextLeft}"
                    Canvas.Top="-8"
                    Margin="-5,0,0,0"
                    Padding="1"
                    CornerRadius="1"
                    IsHitTestVisible="False"
                    Loaded="MapControlBorder_Loaded"
                    Opacity="{Binding Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}, Path=GapTextOpacity}"
                    Visibility="{Binding Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}, Path=GapTextVisibility}">
                    <Border
                        Padding="1"
                        BorderBrush="{x:Bind Mode=OneWay, Path=local:TrackSplitter.RedIfInvalid(IsValid)}"
                        BorderThickness="1">
                        <TextBlock FontSize="10" Text="{x:Bind Mode=OneWay, Path=cycloid:Format.Numeric(DistanceToNext)}" />
                    </Border>
                </local:MapControlBorder>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>

                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource NormalBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>

                        <VisualState x:Name="PointerOver">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PointerOverBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                    <SplineDoubleKeyFrame
                                        KeySpline="0.0, 0.0, 0.0, 1.0"
                                        KeyTime="0:0:0.35"
                                        Value="1.35" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                    <SplineDoubleKeyFrame
                                        KeySpline="0.0, 0.0, 0.0, 1.0"
                                        KeyTime="0:0:0.35"
                                        Value="1.35" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>

                        <VisualState x:Name="PointerCaptured">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CapturedBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1.35" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Triangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1.35" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>

                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Canvas>
        </DataTemplate>
    </ItemsControl.ItemTemplate>
</ItemsControl>
