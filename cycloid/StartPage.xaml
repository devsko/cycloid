<UserControl
    x:Class="cycloid.StartPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ic="using:FluentIcons.Uwp"
    xmlns:local="using:cycloid"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:CommunityToolkit.WinUI.Media"
    xmlns:ui="using:CommunityToolkit.WinUI"
    Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>

            <x:Double x:Key="PopupWidth">700</x:Double>
            <x:Double x:Key="PopupHeight">436</x:Double>

            <Style TargetType="ToggleButton">
                <Setter Property="Width" Value="28" />
                <Setter Property="Height" Value="28" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
                <Setter Property="Foreground" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                Background="{TemplateBinding Background}"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Foreground="{TemplateBinding Foreground}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Checked">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForeground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrushPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Visible">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBackground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonForeground}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleButtonBorderBrush}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="DarkSlateGray">
        <Popup
            x:Name="Popup"
            Width="{StaticResource PopupWidth}"
            Height="{StaticResource PopupHeight}"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <Border>
                <ui:Effects.Shadow>
                    <media:AttachedCardShadow Offset="4,8" Color="#60000000" />
                </ui:Effects.Shadow>
                <Border
                    x:Name="Border"
                    Width="{StaticResource PopupWidth}"
                    Height="{StaticResource PopupHeight}"
                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                    CornerRadius="5">
                    <Grid
                        Margin="30"
                        ColumnSpacing="24"
                        RowSpacing="12">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.ColumnSpan="2"
                            FontSize="24"
                            Text="cycloid" />
                        <TextBlock
                            Grid.Row="1"
                            FontSize="16"
                            Text="Open recent track" />
                        <TextBlock
                            Grid.Row="1"
                            Grid.Column="1"
                            FontSize="16"
                            Text="Get started" />
                        <ListView
                            x:Name="TrackList"
                            Grid.Row="2"
                            ChoosingItemContainer="TrackList_ChoosingItemContainer"
                            DoubleTapped="TrackList_DoubleTapped"
                            ItemContainerStyle="{StaticResource DefaultListViewItemStyle}"
                            ItemsSource="{x:Bind Mode=OneTime, Path=local:App.Current.ViewModel.TrackListItems}"
                            PreviewKeyDown="TrackList_PreviewKeyDown">
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="local:TrackListItem">
                                    <Grid Padding="0,6,0,6" ColumnSpacing="10">
                                        <Grid.ContextFlyout>
                                            <MenuFlyout>
                                                <MenuFlyoutItem Text="Open" Icon="{ic:SymbolIcon Symbol=Open}" Click="Open_Click" />
                                                <MenuFlyoutItem Text="Create copy" Icon="{ic:SymbolIcon Symbol=SaveCopy}" Click="CreateCopy_Click" />
                                                <MenuFlyoutItem Text="Copy path" Icon="{ic:SymbolIcon Symbol=Copy}" Click="CopyPath_Click" />
                                                <MenuFlyoutItem Text="Remove from list" Icon="{ic:SymbolIcon Symbol=AppsList}" Click="Remove_Click" />
                                            </MenuFlyout>
                                        </Grid.ContextFlyout>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid ColumnSpacing="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock FontSize="16" Text="{x:Bind Mode=OneTime, Path=Name}" />
                                            <TextBlock
                                                Grid.Column="1"
                                                FontSize="16"
                                                Text="{x:Bind Mode=OneTime, Path=local:Format.Distance(TrackDistance)}" />
                                        </Grid>
                                        <Grid Grid.Row="1" ColumnSpacing="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                FontSize="12"
                                                Text="{x:Bind Mode=OneTime, Path=DirectoryPath}"
                                                TextTrimming="CharacterEllipsis" />
                                            <TextBlock
                                                Grid.Column="1"
                                                FontSize="12"
                                                HorizontalTextAlignment="Right"
                                                Text="{x:Bind Mode=OneTime, Path=local:Format.Date(LastAccessDate)}" />
                                        </Grid>
                                        <ToggleButton
                                            Grid.RowSpan="2"
                                            Grid.Column="2"
                                            IsChecked="{x:Bind Mode=TwoWay, Path=IsPinned}">
                                            <ToggleButton.Content>
                                                <ic:SymbolIcon
                                                    FontSize="14"
                                                    IconVariant="{x:Bind Mode=OneWay, Path=ToIconVariant(IsPinned)}"
                                                    Symbol="Pin" />
                                            </ToggleButton.Content>
                                        </ToggleButton>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <StackPanel
                            Grid.Row="2"
                            Grid.Column="1"
                            Width="180"
                            Spacing="12">
                            <StackPanel.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                </Style>
                                <Style x:Key="ButtonStackPanel" TargetType="StackPanel">
                                    <Setter Property="Padding" Value="0,8,0,8" />
                                    <Setter Property="Orientation" Value="Horizontal" />
                                    <Setter Property="Spacing" Value="12" />
                                </Style>
                            </StackPanel.Resources>
                            <Button Tapped="OpenFile">
                                <Button.Content>
                                    <StackPanel Style="{StaticResource ButtonStackPanel}">
                                        <SymbolIcon Symbol="OpenFile" />
                                        <TextBlock Text="Open a track" />
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button Tapped="CreateFile">
                                <Button.Content>
                                    <StackPanel Style="{StaticResource ButtonStackPanel}">
                                        <ic:SymbolIcon Symbol="New" />
                                        <TextBlock Text="Crate a new track" />
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Border>
        </Popup>
    </Grid>
</UserControl>
